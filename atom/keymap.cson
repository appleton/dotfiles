# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# 'body':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#

'.editor':
  'cmd-l': 'go-to-line:toggle'

'atom-text-editor':
  'cmd-alt-down':  'pane:split-down'
  'cmd-alt-up':    'pane:split-up'
  'cmd-alt-right': 'pane:split-right'
  'cmd-alt-left':  'pane:split-left'
  'ctrl-h':        'window:focus-pane-on-left'
  'ctrl-j':        'window:focus-pane-below'
  'ctrl-k':        'window:focus-pane-above'
  'ctrl-l':        'window:focus-pane-on-right'
  'cmd-ctrl-h':    'window:move-active-item-to-pane-on-left'
  'cmd-ctrl-j':    'window:move-active-item-to-pane-below'
  'cmd-ctrl-k':    'window:move-active-item-to-pane-above'
  'cmd-ctrl-l':    'window:move-active-item-to-pane-on-right'

'atom-text-editor.vim-mode-plus.normal-mode':
  'y s':   'vim-mode-plus:surround'
  'y s w': 'vim-mode-plus:surround-word'
  'y m s': 'vim-mode-plus:map-surround'
  'd s':   'vim-mode-plus:delete-surround-any-pair'
  'c s':   'vim-mode-plus:change-surround-any-pair'
  'enter': 'editor:newline-below'
  'g f':   'open-this:here'
  'g f j': 'open-this:split-down'
  'g f l': 'open-this:split-right'
"atom-text-editor.vim-mode-plus.normal-mode[data-grammar='source tsx']":
  'g f':   'typescript:go-to-declaration'
  'g F':   'typescript:return-from-declaration'

'atom-text-editor.vim-mode-plus.insert-mode':
   'j k': 'vim-mode-plus:activate-normal-mode'
